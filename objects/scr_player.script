go.property("angular_velocity", 3)
go.property("linear_velocity", 200)
go.property("acceleration_decay", 0.5)

function init(self)
	msg.post(".", "acquire_input_focus")
	go.set_position(vmath.vector3(sys.get_config_int("display.width") / 2, sys.get_config_int("display.height") / 2, 0))

	self.velocityX = 0
	self.velocityY = 0

	self.immortal = true
	self.thrust = 0 -- 0 = no thrust, 1 = thrust
	self.rotate = 0 -- direction of rotation (0 = no rotation, 1 = left, -1 = right)

	timer.delay(1, false, function() self.immortal = false end)
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	local rotation = go.get_rotation()
	if self.rotate ~= 0 then
		rotation = rotation * vmath.quat_rotation_z(self.angular_velocity * self.rotate * dt)
		go.set_rotation(rotation)
	end

	if self.thrust ~= 0 then
		local distance = self.linear_velocity * dt
		local direction = vmath.rotate(rotation, vmath.vector3(0, distance, 0))

		self.velocityX = self.velocityX + direction.x
		self.velocityY = self.velocityY + direction.y
	end

	local pos = go.get_position()
	pos.x = (pos.x + self.velocityX * dt) % sys.get_config_int("display.width", 1)
	pos.y = (pos.y + self.velocityY * dt) % sys.get_config_int("display.height", 1)

	go.set_position(pos)
end

function on_input(self, action_id, action)
	if action_id == hash("left") then
		self.rotate = action.released and 0 or 1
	end

	if action_id == hash("right") then
		self.rotate = action.released and 0 or -1
	end

	if action_id == hash("up") then
		self.thrust = action.released and 0 or 1
	end

	if action_id == hash("trigger") and action.released then
		sound.play("/game_manager#bullet")
		local rotation = go.get_rotation()
		local position = go.get_position() + vmath.rotate(rotation, vmath.vector3(0, 15, 0))
		local bullet = factory.create("/game_manager#bulletfactory", position, rotation)
		local to = position + vmath.rotate(rotation, vmath.vector3(0, 500, 0))
		go.animate(bullet, "position", go.PLAYBACK_ONCE_FORWARD, to, go.EASING_LINEAR, 0.25, 0, function()
			go.delete(bullet)
		end)
	end
end

function on_message(self, message_id, message, sender)
	if (self.immortal) then
		return
	end
	if message_id == hash("collision_response") and message.other_group == hash("meteor") then
		go.animate("#spr_player", "tint", go.PLAYBACK_LOOP_PINGPONG, vmath.vector4(0.9, 0.3, 0.2, 1), go
			.EASING_INOUTQUAD,
			2)
		sound.play("#ofuk.exe")
		timer.delay(2, false,
			function()
				go.cancel_animations("#spr_player")
				go.set("#spr_player", "tint", vmath.vector4(1, 1, 1, 1))
			end)
	end
end
